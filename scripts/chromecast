#!/usr/bin/env ruby

# I've called this script 'chromecast', since it switches the VSX AVR
# to the chromecast installed in the VIDEO 1 input of the VSX.  Of
# course you may not be using that name - this will just switch to the
# VIDEO 1 input.

$LOAD_PATH.unshift  File.expand_path(File.dirname(__FILE__) + "/../lib")
require 'vsx'

TARGET_VOLUME = -25

def video1? vsx
  return (vsx.video1.selected?) &&
         (vsx.volume.db >= target_volume) &&
         (not vsx.volume.muted?) &&
         (vsx.listening_mode == vsx::stereo_direct_set)
end

begin
  vsx = Vsx.new(ARGV[0] || 'vsx.sacred.net')
  was_off = vsx.off?
  vsx.on

  if video1? vsx
    puts "Already set to VIDEO 1, exiting."
    exit
  end

  vsx.volume.db = -50
  vsx.volume.unmute
  vsx.video1.select
  vsx.listening_mode = Vsx::STEREO_DIRECT_SET

  sleep 5 if was_off

  vsx.volume.fade_in TARGET_VOLUME

rescue => e
  puts "Oops: #{e.class}"
  puts e.message
  puts e.backtrace
end
